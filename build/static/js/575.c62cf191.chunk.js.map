{"version":3,"file":"static/js/575.c62cf191.chunk.js","mappings":"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","sources":["components/modals/components/MeetingTypeSelector.jsx","components/modals/components/AttendeeSelector.jsx","components/modals/components/CalendarIntegration.jsx","components/modals/components/MeetingScheduler.jsx"],"sourcesContent":["import React from 'react';\r\nimport Button from '../../ui/Button';\r\nimport Icon from '../../AppIcon';\r\n\r\nconst MeetingTypeSelector = ({ meetingTypes, onSelect, onQuickSchedule, onInstantMeeting }) => {\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n      {meetingTypes.map(type => (\r\n        <div\r\n          key={type.id}\r\n          className=\"p-3 border border-gray-200 rounded-lg hover:shadow-sm transition-shadow\"\r\n        >\r\n          <div className=\"flex items-start gap-3\">\r\n            <div className={`w-8 h-8 ${type.color} rounded-lg flex items-center justify-center flex-shrink-0`}>\r\n              <Icon name={type.icon} size={16} className=\"text-white\" />\r\n            </div>\r\n            <div className=\"flex-1 min-w-0\">\r\n              <h5 className=\"font-medium text-gray-900\">{type.name}</h5>\r\n              <p className=\"text-xs text-gray-600 mt-1\">{type.description}</p>\r\n              <div className=\"flex items-center gap-1 mt-2 text-xs text-gray-500\">\r\n                <Icon name=\"Clock\" size={12} />\r\n                <span>{type.defaultDuration} min</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-2 mt-3\">\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"outline\"\r\n              onClick={() => onQuickSchedule(type.id)}\r\n              iconName=\"Calendar\"\r\n              className=\"flex-1 text-xs\"\r\n            >\r\n              Schedule\r\n            </Button>\r\n            {type.id === 'standup' && (\r\n              <Button\r\n                size=\"sm\"\r\n                onClick={() => onInstantMeeting(type.id)}\r\n                iconName=\"Video\"\r\n                className=\"bg-green-600 hover:bg-green-700 text-white text-xs\"\r\n              >\r\n                Start Now\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MeetingTypeSelector;\r\n","import React, { useState } from 'react';\r\nimport Button from '../../ui/Button';\r\nimport Input from '../../ui/Input';\r\n\r\n\r\nconst AttendeeSelector = ({ organizationMembers, selectedAttendees, onAttendeesChange }) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const filteredMembers = organizationMembers.filter(member =>\r\n    member.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    member.role.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  const handleAttendeeToggle = (memberId) => {\r\n    const newAttendees = selectedAttendees.includes(memberId)\r\n      ? selectedAttendees.filter(id => id !== memberId)\r\n      : [...selectedAttendees, memberId];\r\n    onAttendeesChange(newAttendees);\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    onAttendeesChange(organizationMembers.map(m => m.id));\r\n  };\r\n\r\n  const handleSelectNone = () => {\r\n    onAttendeesChange([]);\r\n  };\r\n\r\n  const getRoleColor = (role) => {\r\n    switch (role.toLowerCase()) {\r\n      case 'owner':\r\n        return 'text-purple-600 bg-purple-50';\r\n      case 'admin':\r\n        return 'text-blue-600 bg-blue-50';\r\n      case 'developer':\r\n        return 'text-green-600 bg-green-50';\r\n      case 'designer':\r\n        return 'text-pink-600 bg-pink-50';\r\n      case 'pm':\r\n      case 'project manager':\r\n        return 'text-orange-600 bg-orange-50';\r\n      default:\r\n        return 'text-gray-600 bg-gray-50';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-3\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <label className=\"text-sm font-medium text-gray-700\">Meeting Attendees</label>\r\n        <div className=\"flex items-center gap-2\">\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"ghost\"\r\n            onClick={handleSelectAll}\r\n            className=\"text-xs text-blue-600\"\r\n          >\r\n            Select All\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"ghost\"\r\n            onClick={handleSelectNone}\r\n            className=\"text-xs text-gray-600\"\r\n          >\r\n            Clear\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Search */}\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Search team members...\"\r\n        value={searchQuery}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n        iconName=\"Search\"\r\n        size=\"sm\"\r\n      />\r\n\r\n      {/* Selected Count */}\r\n      {selectedAttendees.length > 0 && (\r\n        <div className=\"text-sm text-gray-600\">\r\n          {selectedAttendees.length} attendee{selectedAttendees.length !== 1 ? 's' : ''} selected\r\n        </div>\r\n      )}\r\n\r\n      {/* Members List */}\r\n      <div className=\"max-h-48 overflow-y-auto space-y-2\">\r\n        {filteredMembers.length === 0 ? (\r\n          <div className=\"text-center py-4 text-gray-500 text-sm\">\r\n            {searchQuery ? 'No members found' : 'No team members available'}\r\n          </div>\r\n        ) : (\r\n          filteredMembers.map(member => {\r\n            const isSelected = selectedAttendees.includes(member.id);\r\n            return (\r\n              <div\r\n                key={member.id}\r\n                className={`\r\n                  p-3 border rounded-lg cursor-pointer transition-colors\r\n                  ${isSelected \r\n                    ? 'bg-blue-50 border-blue-300' \r\n                    : 'bg-white border-gray-200 hover:bg-gray-50'\r\n                  }\r\n                `}\r\n                onClick={() => handleAttendeeToggle(member.id)}\r\n              >\r\n                <div className=\"flex items-center gap-3\">\r\n                  <div className=\"flex items-center\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={isSelected}\r\n                      onChange={() => {}} // Handled by parent click\r\n                      className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n                  \r\n                  {/* Avatar */}\r\n                  <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\r\n                    <span className=\"text-white text-sm font-medium\">\r\n                      {member.name.split(' ').map(n => n[0]).join('').toUpperCase()}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <span className=\"font-medium text-gray-900\">{member.name}</span>\r\n                      <span className={`px-2 py-0.5 rounded-full text-xs font-medium ${getRoleColor(member.role)}`}>\r\n                        {member.role}\r\n                      </span>\r\n                    </div>\r\n                    {member.email && (\r\n                      <p className=\"text-sm text-gray-600 truncate\">{member.email}</p>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  {/* Availability Indicator */}\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <div className={`w-2 h-2 rounded-full ${\r\n                      member.isOnline ? 'bg-green-500' : 'bg-gray-400'\r\n                    }`} />\r\n                    <span className=\"text-xs text-gray-500\">\r\n                      {member.isOnline ? 'Online' : 'Offline'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n\r\n      {/* Quick Select Options */}\r\n      <div className=\"pt-3 border-t border-gray-200\">\r\n        <div className=\"text-xs text-gray-600 mb-2\">Quick select:</div>\r\n        <div className=\"flex flex-wrap gap-2\">\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            onClick={() => {\r\n              const developers = organizationMembers\r\n                .filter(m => m.role.toLowerCase().includes('developer'))\r\n                .map(m => m.id);\r\n              onAttendeesChange([...new Set([...selectedAttendees, ...developers])]);\r\n            }}\r\n            className=\"text-xs\"\r\n          >\r\n            + All Developers\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            onClick={() => {\r\n              const managers = organizationMembers\r\n                .filter(m => m.role.toLowerCase().includes('manager') || m.role.toLowerCase().includes('pm'))\r\n                .map(m => m.id);\r\n              onAttendeesChange([...new Set([...selectedAttendees, ...managers])]);\r\n            }}\r\n            className=\"text-xs\"\r\n          >\r\n            + All Managers\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            onClick={() => {\r\n              const designers = organizationMembers\r\n                .filter(m => m.role.toLowerCase().includes('designer'))\r\n                .map(m => m.id);\r\n              onAttendeesChange([...new Set([...selectedAttendees, ...designers])]);\r\n            }}\r\n            className=\"text-xs\"\r\n          >\r\n            + All Designers\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendeeSelector;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '../../ui/Button';\r\nimport Icon from '../../AppIcon';\r\n\r\nconst CalendarIntegration = ({ projectData }) => {\r\n  const [connectedCalendars, setConnectedCalendars] = useState([]);\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [syncStatus, setSyncStatus] = useState('idle'); // idle, syncing, success, error\r\n\r\n  const calendarProviders = [\r\n    {\r\n      id: 'google',\r\n      name: 'Google Calendar',\r\n      icon: 'Calendar',\r\n      color: 'bg-red-500',\r\n      description: 'Sync with Google Calendar and Gmail'\r\n    },\r\n    {\r\n      id: 'outlook',\r\n      name: 'Microsoft Outlook',\r\n      icon: 'Mail',\r\n      color: 'bg-blue-500',\r\n      description: 'Sync with Outlook and Office 365'\r\n    },\r\n    {\r\n      id: 'apple',\r\n      name: 'Apple Calendar',\r\n      icon: 'Smartphone',\r\n      color: 'bg-gray-800',\r\n      description: 'Sync with iCloud Calendar'\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadConnectedCalendars();\r\n  }, []);\r\n\r\n  const loadConnectedCalendars = async () => {\r\n    try {\r\n      // This would fetch from your API\r\n      const calendars = [\r\n        {\r\n          id: 'google-cal-1',\r\n          provider: 'google',\r\n          email: 'john@example.com',\r\n          isActive: true,\r\n          lastSync: '2024-01-15T10:30:00Z'\r\n        }\r\n      ];\r\n      setConnectedCalendars(calendars);\r\n    } catch (error) {\r\n      console.error('Failed to load calendars:', error);\r\n    }\r\n  };\r\n\r\n  const handleConnectCalendar = async (providerId) => {\r\n    setIsConnecting(true);\r\n    try {\r\n      // This would initiate OAuth flow\r\n      const authUrl = await getCalendarAuthUrl(providerId);\r\n      \r\n      // Open OAuth popup\r\n      const popup = window.open(\r\n        authUrl,\r\n        'calendar-auth',\r\n        'width=500,height=600,scrollbars=yes,resizable=yes'\r\n      );\r\n\r\n      // Listen for OAuth completion\r\n      const checkClosed = setInterval(() => {\r\n        if (popup.closed) {\r\n          clearInterval(checkClosed);\r\n          setIsConnecting(false);\r\n          // Refresh connected calendars\r\n          loadConnectedCalendars();\r\n        }\r\n      }, 1000);\r\n\r\n    } catch (error) {\r\n      console.error('Failed to connect calendar:', error);\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const handleDisconnectCalendar = async (calendarId) => {\r\n    try {\r\n      await disconnectCalendar(calendarId);\r\n      setConnectedCalendars(prev => prev.filter(cal => cal.id !== calendarId));\r\n    } catch (error) {\r\n      console.error('Failed to disconnect calendar:', error);\r\n    }\r\n  };\r\n\r\n  const handleSyncCalendars = async () => {\r\n    setSyncStatus('syncing');\r\n    try {\r\n      await syncAllCalendars();\r\n      setSyncStatus('success');\r\n      setTimeout(() => setSyncStatus('idle'), 3000);\r\n    } catch (error) {\r\n      console.error('Failed to sync calendars:', error);\r\n      setSyncStatus('error');\r\n      setTimeout(() => setSyncStatus('idle'), 3000);\r\n    }\r\n  };\r\n\r\n  const getCalendarAuthUrl = async (providerId) => {\r\n    // This would generate the OAuth URL for the provider\r\n    const baseUrls = {\r\n      google: 'https://accounts.google.com/oauth2/auth',\r\n      outlook: 'https://login.microsoftonline.com/common/oauth2/v2.0/authorize',\r\n      apple: 'https://appleid.apple.com/auth/authorize'\r\n    };\r\n    \r\n    return `${baseUrls[providerId]}?client_id=your_client_id&redirect_uri=your_redirect_uri&scope=calendar`;\r\n  };\r\n\r\n  const disconnectCalendar = async (calendarId) => {\r\n    // API call to disconnect calendar\r\n    console.log('Disconnecting calendar:', calendarId);\r\n  };\r\n\r\n  const syncAllCalendars = async () => {\r\n    // API call to sync all calendars\r\n    console.log('Syncing all calendars');\r\n  };\r\n\r\n  const getProviderInfo = (providerId) => {\r\n    return calendarProviders.find(p => p.id === providerId);\r\n  };\r\n\r\n  const formatLastSync = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const now = new Date();\r\n    const diffMs = now - date;\r\n    const diffMins = Math.floor(diffMs / 60000);\r\n    \r\n    if (diffMins < 1) return 'Just now';\r\n    if (diffMins < 60) return `${diffMins}m ago`;\r\n    if (diffMins < 1440) return `${Math.floor(diffMins / 60)}h ago`;\r\n    return date.toLocaleDateString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <h4 className=\"text-sm font-medium text-gray-700\">Calendar Integration</h4>\r\n        {connectedCalendars.length > 0 && (\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            onClick={handleSyncCalendars}\r\n            disabled={syncStatus === 'syncing'}\r\n            iconName={syncStatus === 'syncing' ? 'Loader2' : 'RefreshCw'}\r\n            className={`text-xs ${syncStatus === 'syncing' ? 'animate-spin' : ''}`}\r\n          >\r\n            {syncStatus === 'syncing' ? 'Syncing...' : 'Sync Now'}\r\n          </Button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Sync Status */}\r\n      {syncStatus !== 'idle' && (\r\n        <div className={`p-2 rounded text-xs ${\r\n          syncStatus === 'success' \r\n            ? 'bg-green-50 text-green-700 border border-green-200'\r\n            : syncStatus === 'error'\r\n              ? 'bg-red-50 text-red-700 border border-red-200'\r\n              : 'bg-blue-50 text-blue-700 border border-blue-200'\r\n        }`}>\r\n          {syncStatus === 'success' && '✓ Calendars synced successfully'}\r\n          {syncStatus === 'error' && '✗ Failed to sync calendars'}\r\n          {syncStatus === 'syncing' && '⟳ Syncing calendars...'}\r\n        </div>\r\n      )}\r\n\r\n      {/* Connected Calendars */}\r\n      {connectedCalendars.length > 0 && (\r\n        <div className=\"space-y-2\">\r\n          <h5 className=\"text-xs font-medium text-gray-600\">Connected Calendars</h5>\r\n          {connectedCalendars.map(calendar => {\r\n            const provider = getProviderInfo(calendar.provider);\r\n            return (\r\n              <div key={calendar.id} className=\"flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <div className={`w-6 h-6 ${provider.color} rounded flex items-center justify-center`}>\r\n                    <Icon name={provider.icon} size={12} className=\"text-white\" />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-sm font-medium text-gray-900\">{provider.name}</div>\r\n                    <div className=\"text-xs text-gray-600\">{calendar.email}</div>\r\n                    <div className=\"text-xs text-gray-500\">\r\n                      Last sync: {formatLastSync(calendar.lastSync)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <div className={`w-2 h-2 rounded-full ${calendar.isActive ? 'bg-green-500' : 'bg-gray-400'}`} />\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"ghost\"\r\n                    onClick={() => handleDisconnectCalendar(calendar.id)}\r\n                    iconName=\"X\"\r\n                    className=\"text-red-600 hover:text-red-800\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {/* Available Providers */}\r\n      <div className=\"space-y-2\">\r\n        <h5 className=\"text-xs font-medium text-gray-600\">\r\n          {connectedCalendars.length > 0 ? 'Connect Additional Calendars' : 'Connect Your Calendar'}\r\n        </h5>\r\n        {calendarProviders\r\n          .filter(provider => !connectedCalendars.some(cal => cal.provider === provider.id))\r\n          .map(provider => (\r\n            <div key={provider.id} className=\"flex items-center justify-between p-3 border border-gray-200 rounded-lg hover:bg-gray-50\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className={`w-6 h-6 ${provider.color} rounded flex items-center justify-center`}>\r\n                  <Icon name={provider.icon} size={12} className=\"text-white\" />\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-sm font-medium text-gray-900\">{provider.name}</div>\r\n                  <div className=\"text-xs text-gray-600\">{provider.description}</div>\r\n                </div>\r\n              </div>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                onClick={() => handleConnectCalendar(provider.id)}\r\n                disabled={isConnecting}\r\n                iconName=\"Plus\"\r\n                className=\"text-xs\"\r\n              >\r\n                Connect\r\n              </Button>\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      {/* Benefits */}\r\n      <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg\">\r\n        <h6 className=\"text-xs font-medium text-blue-800 mb-2 flex items-center gap-1\">\r\n          <Icon name=\"Info\" size={12} />\r\n          Calendar Integration Benefits\r\n        </h6>\r\n        <ul className=\"text-xs text-blue-700 space-y-1\">\r\n          <li>• Automatic meeting invites with calendar events</li>\r\n          <li>• Conflict detection and alternative time suggestions</li>\r\n          <li>• Bi-directional sync with your existing calendar</li>\r\n          <li>• Reminder notifications before meetings</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarIntegration;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Button from '../../ui/Button';\r\nimport Input from '../../ui/Input';\r\nimport Select from '../../ui/Select';\r\nimport Icon from '../../AppIcon';\r\nimport MeetingTypeSelector from './MeetingTypeSelector';\r\nimport AttendeeSelector from './AttendeeSelector';\r\nimport CalendarIntegration from './CalendarIntegration';\r\n\r\nconst MeetingScheduler = ({ projectData, tasks, organizationMembers }) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [activeMeetings, setActiveMeetings] = useState([]);\r\n  const [schedulingMeeting, setSchedulingMeeting] = useState(null);\r\n  const [meetingForm, setMeetingForm] = useState({\r\n    type: 'kickoff',\r\n    title: '',\r\n    description: '',\r\n    duration: 60,\r\n    attendees: [],\r\n    date: '',\r\n    time: '',\r\n    agenda: [],\r\n    recurring: false,\r\n    recurringPattern: 'weekly'\r\n  });\r\n\r\n  const meetingTypes = [\r\n    {\r\n      id: 'kickoff',\r\n      name: 'Project Kickoff',\r\n      icon: 'Rocket',\r\n      color: 'bg-green-500',\r\n      defaultDuration: 90,\r\n      description: 'Initial project planning and team alignment',\r\n      suggestedAgenda: [\r\n        'Project overview and objectives',\r\n        'Team introductions and roles',\r\n        'Timeline and milestones review',\r\n        'Communication protocols',\r\n        'Next steps and action items'\r\n      ]\r\n    },\r\n    {\r\n      id: 'standup',\r\n      name: 'Daily Standup',\r\n      icon: 'Users',\r\n      color: 'bg-blue-500',\r\n      defaultDuration: 15,\r\n      description: 'Quick daily sync on progress and blockers',\r\n      suggestedAgenda: [\r\n        'What did you accomplish yesterday?',\r\n        'What will you work on today?',\r\n        'Any blockers or impediments?'\r\n      ]\r\n    },\r\n    {\r\n      id: 'sprint-review',\r\n      name: 'Sprint Review',\r\n      icon: 'Eye',\r\n      color: 'bg-purple-500',\r\n      defaultDuration: 60,\r\n      description: 'Review completed work and gather feedback',\r\n      suggestedAgenda: [\r\n        'Demo completed features',\r\n        'Review sprint goals achievement',\r\n        'Stakeholder feedback',\r\n        'Retrospective discussion'\r\n      ]\r\n    },\r\n    {\r\n      id: 'planning',\r\n      name: 'Sprint Planning',\r\n      icon: 'Calendar',\r\n      color: 'bg-orange-500',\r\n      defaultDuration: 120,\r\n      description: 'Plan upcoming sprint tasks and commitments',\r\n      suggestedAgenda: [\r\n        'Review product backlog',\r\n        'Estimate task complexity',\r\n        'Assign tasks to team members',\r\n        'Define sprint goals'\r\n      ]\r\n    },\r\n    {\r\n      id: 'retrospective',\r\n      name: 'Retrospective',\r\n      icon: 'RotateCcw',\r\n      color: 'bg-indigo-500',\r\n      defaultDuration: 60,\r\n      description: 'Reflect on process and identify improvements',\r\n      suggestedAgenda: [\r\n        'What went well?',\r\n        'What could be improved?',\r\n        'Action items for next sprint',\r\n        'Process adjustments'\r\n      ]\r\n    },\r\n    {\r\n      id: 'custom',\r\n      name: 'Custom Meeting',\r\n      icon: 'Settings',\r\n      color: 'bg-gray-500',\r\n      defaultDuration: 60,\r\n      description: 'Custom meeting for specific project needs',\r\n      suggestedAgenda: []\r\n    }\r\n  ];\r\n\r\n  const durationOptions = [\r\n    { value: 15, label: '15 minutes' },\r\n    { value: 30, label: '30 minutes' },\r\n    { value: 60, label: '1 hour' },\r\n    { value: 90, label: '1.5 hours' },\r\n    { value: 120, label: '2 hours' },\r\n    { value: 180, label: '3 hours' }\r\n  ];\r\n\r\n  // const recurringOptions = [\r\n  //   { value: 'daily', label: 'Daily' },\r\n  //   { value: 'weekly', label: 'Weekly' },\r\n  //   { value: 'biweekly', label: 'Bi-weekly' },\r\n  //   { value: 'monthly', label: 'Monthly' }\r\n  // ];\r\n\r\n  useEffect(() => {\r\n    // Load existing meetings for this project\r\n    loadProjectMeetings();\r\n  }, [projectData.id]);\r\n\r\n  const loadProjectMeetings = async () => {\r\n    try {\r\n      // This would fetch from your API\r\n      const meetings = [\r\n        {\r\n          id: 'meeting-1',\r\n          type: 'kickoff',\r\n          title: 'Project Kickoff Meeting',\r\n          date: '2024-01-15',\r\n          time: '10:00',\r\n          duration: 90,\r\n          attendees: ['john-doe', 'jane-smith'],\r\n          status: 'scheduled',\r\n          meetingUrl: await generateMeetingUrl({ type: 'kickoff' })\r\n        }\r\n      ];\r\n      setActiveMeetings(meetings);\r\n    } catch (error) {\r\n      console.error('Failed to load meetings:', error);\r\n    }\r\n  };\r\n\r\n  const handleMeetingTypeSelect = (type) => {\r\n    const meetingType = meetingTypes.find(mt => mt.id === type);\r\n    setMeetingForm(prev => ({\r\n      ...prev,\r\n      type: type,\r\n      title: meetingType.name,\r\n      duration: meetingType.defaultDuration,\r\n      agenda: meetingType.suggestedAgenda.map(item => ({ text: item, completed: false }))\r\n    }));\r\n  };\r\n\r\n  const handleQuickSchedule = async (type) => {\r\n    const meetingType = meetingTypes.find(mt => mt.id === type);\r\n    const now = new Date();\r\n    const defaultDate = now.toISOString().split('T')[0];\r\n    const defaultTime = `${String(now.getHours() + 1).padStart(2, '0')}:00`;\r\n\r\n    const quickMeeting = {\r\n      type: type,\r\n      title: `${projectData.name} - ${meetingType.name}`,\r\n      description: meetingType.description,\r\n      duration: meetingType.defaultDuration,\r\n      attendees: organizationMembers.map(m => m.id),\r\n      date: defaultDate,\r\n      time: defaultTime,\r\n      agenda: meetingType.suggestedAgenda.map(item => ({ text: item, completed: false }))\r\n    };\r\n\r\n    try {\r\n      const meeting = await scheduleMeeting(quickMeeting);\r\n      setActiveMeetings(prev => [...prev, meeting]);\r\n      \r\n      // Send notifications\r\n      await sendMeetingNotifications(meeting);\r\n    } catch (error) {\r\n      console.error('Failed to schedule meeting:', error);\r\n    }\r\n  };\r\n\r\n  const handleStartInstantMeeting = async (type) => {\r\n    try {\r\n      const meetingType = meetingTypes.find(mt => mt.id === type);\r\n      const instantMeeting = {\r\n        type: 'instant',\r\n        title: `Instant ${meetingType.name}`,\r\n        duration: meetingType.defaultDuration,\r\n        attendees: organizationMembers.map(m => m.id),\r\n        startTime: new Date().toISOString()\r\n      };\r\n\r\n      const meetingUrl = await createInstantMeeting(instantMeeting);\r\n      \r\n      // Send instant notifications\r\n      await sendInstantMeetingNotifications(meetingUrl, instantMeeting);\r\n      \r\n      // Open meeting in new tab\r\n      window.open(meetingUrl, '_blank');\r\n    } catch (error) {\r\n      console.error('Failed to start instant meeting:', error);\r\n    }\r\n  };\r\n\r\n  const scheduleMeeting = async (meetingData) => {\r\n    // This would integrate with your calendar API\r\n    const meeting = {\r\n      id: `meeting-${Date.now()}`,\r\n      ...meetingData,\r\n      status: 'scheduled',\r\n      meetingUrl: await generateMeetingUrl(meetingData),\r\n      createdAt: new Date().toISOString()\r\n    };\r\n\r\n    // Save to database\r\n    await saveMeetingToDatabase(meeting);\r\n    \r\n    return meeting;\r\n  };\r\n\r\n  const generateMeetingUrl = async (meetingData) => {\r\n    // Generate a more realistic meeting URL with proper format\r\n    const meetingId = `${Date.now()}-${Math.random().toString(36).substring(2, 8)}`;\r\n    const roomName = `${projectData.name.replace(/\\s+/g, '-').toLowerCase()}-${meetingData.type}`;\r\n\r\n    // For now, generate a Google Meet style URL that looks more realistic\r\n    // In production, this would integrate with actual video conferencing APIs\r\n    return `https://meet.google.com/${roomName}-${meetingId}`;\r\n  };\r\n\r\n  const createInstantMeeting = async (meetingData) => {\r\n    // Create instant meeting room\r\n    return await generateMeetingUrl(meetingData);\r\n  };\r\n\r\n  const sendMeetingNotifications = async (meeting) => {\r\n    // Send email notifications with calendar invites\r\n    const notifications = meeting.attendees.map(attendeeId => ({\r\n      type: 'meeting_scheduled',\r\n      recipient: attendeeId,\r\n      meeting: meeting,\r\n      calendarInvite: generateCalendarInvite(meeting)\r\n    }));\r\n\r\n    await Promise.all(notifications.map(sendNotification));\r\n  };\r\n\r\n  const sendInstantMeetingNotifications = async (meetingUrl, meeting) => {\r\n    // Send instant push notifications\r\n    const notifications = meeting.attendees.map(attendeeId => ({\r\n      type: 'instant_meeting',\r\n      recipient: attendeeId,\r\n      meetingUrl: meetingUrl,\r\n      meeting: meeting\r\n    }));\r\n\r\n    await Promise.all(notifications.map(sendInstantNotification));\r\n  };\r\n\r\n  const generateCalendarInvite = (meeting) => {\r\n    // Generate .ics file content\r\n    const startDate = new Date(`${meeting.date}T${meeting.time}`);\r\n    const endDate = new Date(startDate.getTime() + meeting.duration * 60000);\r\n    \r\n    return {\r\n      title: meeting.title,\r\n      start: startDate.toISOString(),\r\n      end: endDate.toISOString(),\r\n      description: meeting.description,\r\n      location: meeting.meetingUrl,\r\n      attendees: meeting.attendees\r\n    };\r\n  };\r\n\r\n  const sendNotification = async (notification) => {\r\n    // Implementation for sending notifications\r\n    console.log('Sending notification:', notification);\r\n  };\r\n\r\n  const sendInstantNotification = async (notification) => {\r\n    // Implementation for instant notifications\r\n    console.log('Sending instant notification:', notification);\r\n  };\r\n\r\n  const saveMeetingToDatabase = async (meeting) => {\r\n    // Save meeting to database\r\n    console.log('Saving meeting to database:', meeting);\r\n  };\r\n\r\n  const getUpcomingMeetings = () => {\r\n    const now = new Date();\r\n    return activeMeetings.filter(meeting => {\r\n      const meetingDate = new Date(`${meeting.date}T${meeting.time}`);\r\n      return meetingDate > now;\r\n    }).sort((a, b) => new Date(`${a.date}T${a.time}`) - new Date(`${b.date}T${b.time}`));\r\n  };\r\n\r\n  const upcomingMeetings = getUpcomingMeetings();\r\n\r\n  return (\r\n    <div className=\"bg-gradient-to-br from-white to-blue-50/30 border border-gray-200 rounded-2xl shadow-sm hover:shadow-md transition-all duration-300\">\r\n      {/* Enhanced Header */}\r\n      <div\r\n        className=\"flex items-center justify-between p-5 cursor-pointer hover:bg-gradient-to-r hover:from-blue-50/50 hover:to-indigo-50/50 rounded-t-2xl transition-all duration-200\"\r\n        onClick={() => setIsExpanded(!isExpanded)}\r\n      >\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"relative\">\r\n            <div className=\"w-12 h-12 bg-gradient-to-br from-green-500 via-blue-500 to-purple-600 rounded-2xl flex items-center justify-center shadow-lg transform hover:scale-105 transition-transform duration-200\">\r\n              <Icon name=\"Calendar\" size={20} className=\"text-white\" />\r\n            </div>\r\n            {upcomingMeetings.length > 0 && (\r\n              <div className=\"absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full flex items-center justify-center border-2 border-white\">\r\n                <span className=\"text-xs font-bold text-white\">{upcomingMeetings.length}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <h3 className=\"text-lg font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent\">\r\n              Meeting Scheduler\r\n            </h3>\r\n            <p className=\"text-sm text-gray-600 flex items-center gap-2\">\r\n              <Icon name=\"Users\" size={12} />\r\n              {upcomingMeetings.length} upcoming meeting{upcomingMeetings.length !== 1 ? 's' : ''}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className={`p-2 rounded-xl transition-all duration-200 ${isExpanded ? 'bg-blue-100 text-blue-600' : 'text-gray-400 hover:bg-gray-100'}`}>\r\n          <Icon\r\n            name={isExpanded ? \"ChevronUp\" : \"ChevronDown\"}\r\n            size={20}\r\n            className=\"transition-transform duration-200\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {isExpanded && (\r\n        <div className=\"border-t border-gray-200 p-4 space-y-4\">\r\n          {/* Quick Actions */}\r\n          <div className=\"grid grid-cols-1 gap-2\">\r\n            <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Quick Actions</h4>\r\n            \r\n            {/* Instant Meeting */}\r\n            <Button\r\n              onClick={() => handleStartInstantMeeting('standup')}\r\n              className=\"w-full justify-start bg-green-600 hover:bg-green-700 text-white\"\r\n              iconName=\"Video\"\r\n            >\r\n              Start Instant Meeting\r\n            </Button>\r\n\r\n            {/* Quick Schedule Buttons */}\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={() => handleQuickSchedule('kickoff')}\r\n                iconName=\"Rocket\"\r\n                className=\"text-sm\"\r\n              >\r\n                Schedule Kickoff\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={() => handleQuickSchedule('planning')}\r\n                iconName=\"Calendar\"\r\n                className=\"text-sm\"\r\n              >\r\n                Planning Meeting\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Upcoming Meetings */}\r\n          {upcomingMeetings.length > 0 && (\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Upcoming Meetings</h4>\r\n              <div className=\"space-y-2\">\r\n                {upcomingMeetings.slice(0, 3).map(meeting => (\r\n                  <div key={meeting.id} className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <h5 className=\"font-medium text-blue-900\">{meeting.title}</h5>\r\n                        <p className=\"text-sm text-blue-700\">\r\n                          {meeting.date} at {meeting.time} ({meeting.duration}min)\r\n                        </p>\r\n                      </div>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => window.open(meeting.meetingUrl, '_blank')}\r\n                        iconName=\"ExternalLink\"\r\n                        className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n                      >\r\n                        Join\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Meeting Type Selector */}\r\n          <div>\r\n            <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Schedule New Meeting</h4>\r\n            <MeetingTypeSelector\r\n              meetingTypes={meetingTypes}\r\n              onSelect={handleMeetingTypeSelect}\r\n              onQuickSchedule={handleQuickSchedule}\r\n              onInstantMeeting={handleStartInstantMeeting}\r\n            />\r\n          </div>\r\n\r\n          {/* Custom Meeting Form */}\r\n          {schedulingMeeting && (\r\n            <div className=\"p-4 bg-gray-50 border border-gray-200 rounded-lg\">\r\n              <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Meeting Details</h4>\r\n              \r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <Input\r\n                  label=\"Meeting Title\"\r\n                  value={meetingForm.title}\r\n                  onChange={(e) => setMeetingForm(prev => ({ ...prev, title: e.target.value }))}\r\n                  placeholder=\"Enter meeting title...\"\r\n                />\r\n                \r\n                <Select\r\n                  label=\"Duration\"\r\n                  value={meetingForm.duration}\r\n                  onChange={(value) => setMeetingForm(prev => ({ ...prev, duration: value }))}\r\n                  options={durationOptions}\r\n                />\r\n                \r\n                <Input\r\n                  label=\"Date\"\r\n                  type=\"date\"\r\n                  value={meetingForm.date}\r\n                  onChange={(e) => setMeetingForm(prev => ({ ...prev, date: e.target.value }))}\r\n                />\r\n                \r\n                <Input\r\n                  label=\"Time\"\r\n                  type=\"time\"\r\n                  value={meetingForm.time}\r\n                  onChange={(e) => setMeetingForm(prev => ({ ...prev, time: e.target.value }))}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mt-4\">\r\n                <AttendeeSelector\r\n                  organizationMembers={organizationMembers}\r\n                  selectedAttendees={meetingForm.attendees}\r\n                  onAttendeesChange={(attendees) => setMeetingForm(prev => ({ ...prev, attendees }))}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between mt-4\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={() => setSchedulingMeeting(null)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={() => handleQuickSchedule(meetingForm.type)}\r\n                  iconName=\"Calendar\"\r\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n                >\r\n                  Schedule Meeting\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Calendar Integration */}\r\n          <CalendarIntegration projectData={projectData} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MeetingScheduler;\r\n"],"names":["_ref","meetingTypes","onSelect","onQuickSchedule","onInstantMeeting","_jsx","className","children","map","type","_jsxs","color","Icon","name","icon","size","description","defaultDuration","Button","variant","onClick","id","iconName","organizationMembers","selectedAttendees","onAttendeesChange","searchQuery","setSearchQuery","useState","filteredMembers","filter","member","toLowerCase","includes","role","getRoleColor","handleSelectAll","m","handleSelectNone","Input","placeholder","value","onChange","e","target","length","isSelected","memberId","newAttendees","handleAttendeeToggle","checked","split","n","join","toUpperCase","email","isOnline","developers","Set","managers","designers","projectData","connectedCalendars","setConnectedCalendars","isConnecting","setIsConnecting","syncStatus","setSyncStatus","calendarProviders","useEffect","loadConnectedCalendars","async","provider","isActive","lastSync","error","console","getCalendarAuthUrl","google","outlook","apple","providerId","disconnectCalendar","log","calendarId","syncAllCalendars","formatLastSync","timestamp","date","Date","diffMs","diffMins","Math","floor","toLocaleDateString","setTimeout","disabled","calendar","find","p","prev","cal","handleDisconnectCalendar","some","authUrl","popup","window","open","checkClosed","setInterval","closed","clearInterval","handleConnectCalendar","tasks","isExpanded","setIsExpanded","activeMeetings","setActiveMeetings","schedulingMeeting","setSchedulingMeeting","meetingForm","setMeetingForm","title","duration","attendees","time","agenda","recurring","recurringPattern","suggestedAgenda","loadProjectMeetings","meetings","status","meetingUrl","generateMeetingUrl","handleQuickSchedule","meetingType","mt","now","defaultDate","toISOString","defaultTime","String","getHours","padStart","quickMeeting","item","text","completed","meeting","scheduleMeeting","sendMeetingNotifications","handleStartInstantMeeting","instantMeeting","startTime","createInstantMeeting","sendInstantMeetingNotifications","meetingData","createdAt","saveMeetingToDatabase","meetingId","random","toString","substring","replace","notifications","attendeeId","recipient","calendarInvite","generateCalendarInvite","Promise","all","sendNotification","sendInstantNotification","startDate","endDate","getTime","start","end","location","notification","upcomingMeetings","getUpcomingMeetings","sort","a","b","slice","MeetingTypeSelector","label","Select","options","AttendeeSelector","CalendarIntegration"],"sourceRoot":""}