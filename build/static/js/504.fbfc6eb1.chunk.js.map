{"version":3,"file":"static/js/504.fbfc6eb1.chunk.js","mappings":"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","sources":["pages/project-management/components/SettingsTab.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\nimport Input from '../../../components/ui/Input';\nimport Select from '../../../components/ui/Select';\nimport { Checkbox } from '../../../components/ui/Checkbox';\nimport apiService from '../../../utils/apiService';\n\nconst SettingsTab = () => {\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n  const [currentProject, setCurrentProject] = useState(null);\n  const [projectSettings, setProjectSettings] = useState({\n    name: \"\",\n    description: \"\",\n    visibility: \"private\",\n    status: \"active\",\n    priority: \"medium\",\n    startDate: \"\",\n    endDate: \"\",\n    budget: \"\",\n    currency: \"USD\",\n    timezone: \"America/New_York\"\n  });\n\n  const [notifications, setNotifications] = useState({\n    emailUpdates: true,\n    taskAssignments: true,\n    deadlineReminders: true,\n    statusChanges: false,\n    weeklyReports: true,\n    slackIntegration: false,\n    teamsIntegration: true\n  });\n\n  // Load current project data\n  useEffect(() => {\n    const loadProjectData = async () => {\n      try {\n        setLoading(true);\n\n        // Get project ID from location state or URL\n        const projectId = location.state?.projectId || location.state?.project?.id;\n\n        if (!projectId) {\n          console.log('No project ID found, using default values');\n          setLoading(false);\n          return;\n        }\n\n        console.log('Loading project data for:', projectId);\n\n        // Fetch project data from API\n        const projectData = await apiService.projects.getById(projectId);\n\n        if (projectData) {\n          setCurrentProject(projectData);\n\n          // Update form with actual project data\n          setProjectSettings({\n            name: projectData.name || \"\",\n            description: projectData.description || \"\",\n            visibility: projectData.visibility || \"private\",\n            status: projectData.status || \"active\",\n            priority: projectData.priority || \"medium\",\n            startDate: projectData.start_date ? projectData.start_date.split('T')[0] : \"\",\n            endDate: projectData.due_date ? projectData.due_date.split('T')[0] : \"\",\n            budget: projectData.budget?.toString() || \"\",\n            currency: projectData.currency || \"USD\",\n            timezone: projectData.timezone || \"America/New_York\"\n          });\n\n          console.log('✅ Project data loaded:', projectData);\n        }\n\n      } catch (error) {\n        console.error('Failed to load project data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadProjectData();\n  }, [location.state]);\n\n  const [workflowSettings, setWorkflowSettings] = useState({\n    autoAssignTasks: false,\n    requireApproval: true,\n    allowGuestAccess: false,\n    enableTimeTracking: true,\n    mandatoryComments: false\n  });\n\n  const [saving, setSaving] = useState(false);\n\n  const visibilityOptions = [\n    { value: 'private', label: 'Private - Only team members' },\n    { value: 'organization', label: 'Organization - All org members' },\n    { value: 'public', label: 'Public - Anyone with link' }\n  ];\n\n  const statusOptions = [\n    { value: 'active', label: 'Active' },\n    { value: 'on-hold', label: 'On Hold' },\n    { value: 'completed', label: 'Completed' },\n    { value: 'archived', label: 'Archived' }\n  ];\n\n  const priorityOptions = [\n    { value: 'low', label: 'Low Priority' },\n    { value: 'medium', label: 'Medium Priority' },\n    { value: 'high', label: 'High Priority' },\n    { value: 'critical', label: 'Critical Priority' }\n  ];\n\n  const currencyOptions = [\n    { value: 'USD', label: 'US Dollar (USD)' },\n    { value: 'EUR', label: 'Euro (EUR)' },\n    { value: 'GBP', label: 'British Pound (GBP)' },\n    { value: 'JPY', label: 'Japanese Yen (JPY)' }\n  ];\n\n  const timezoneOptions = [\n    { value: 'America/New_York', label: 'Eastern Time (ET)' },\n    { value: 'America/Chicago', label: 'Central Time (CT)' },\n    { value: 'America/Denver', label: 'Mountain Time (MT)' },\n    { value: 'America/Los_Angeles', label: 'Pacific Time (PT)' },\n    { value: 'Europe/London', label: 'Greenwich Mean Time (GMT)' },\n    { value: 'Europe/Paris', label: 'Central European Time (CET)' },\n    { value: 'Asia/Tokyo', label: 'Japan Standard Time (JST)' }\n  ];\n\n  const integrations = [\n    {\n      id: 'slack',\n      name: 'Slack',\n      description: 'Send notifications and updates to Slack channels',\n      icon: 'MessageSquare',\n      connected: true,\n      lastSync: '2025-07-28T06:30:00Z'\n    },\n    {\n      id: 'teams',\n      name: 'Microsoft Teams',\n      description: 'Collaborate and share updates in Teams channels',\n      icon: 'Users',\n      connected: false,\n      lastSync: null\n    },\n    {\n      id: 'jira',\n      name: 'Jira',\n      description: 'Sync issues and track development progress',\n      icon: 'Bug',\n      connected: true,\n      lastSync: '2025-07-28T05:45:00Z'\n    },\n    {\n      id: 'calendar',\n      name: 'Google Calendar',\n      description: 'Sync project deadlines and meetings',\n      icon: 'Calendar',\n      connected: false,\n      lastSync: null\n    },\n    {\n      id: 'github',\n      name: 'GitHub',\n      description: 'Link commits and pull requests to tasks',\n      icon: 'GitBranch',\n      connected: true,\n      lastSync: '2025-07-28T07:00:00Z'\n    }\n  ];\n\n  const teamMembers = [\n    {\n      id: 1,\n      name: \"Sarah Johnson\",\n      email: \"sarah.johnson@company.com\",\n      role: \"owner\",\n      avatar: \"https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face\",\n      joinedDate: \"2025-01-15\",\n      lastActive: \"2025-07-28T06:45:00Z\"\n    },\n    {\n      id: 2,\n      name: \"Michael Chen\",\n      email: \"michael.chen@company.com\",\n      role: \"admin\",\n      avatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face\",\n      joinedDate: \"2025-01-20\",\n      lastActive: \"2025-07-28T07:00:00Z\"\n    },\n    {\n      id: 3,\n      name: \"Emily Rodriguez\",\n      email: \"emily.rodriguez@company.com\",\n      role: \"member\",\n      avatar: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face\",\n      joinedDate: \"2025-02-01\",\n      lastActive: \"2025-07-28T06:30:00Z\"\n    },\n    {\n      id: 4,\n      name: \"David Kim\",\n      email: \"david.kim@company.com\",\n      role: \"member\",\n      avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face\",\n      joinedDate: \"2025-02-10\",\n      lastActive: \"2025-07-27T18:20:00Z\"\n    }\n  ];\n\n  const roleOptions = [\n    { value: 'viewer', label: 'Viewer - Can view project' },\n    { value: 'member', label: 'Member - Can edit tasks' },\n    { value: 'admin', label: 'Admin - Can manage project' },\n    { value: 'owner', label: 'Owner - Full control' }\n  ];\n\n  const handleProjectSettingChange = (field, value) => {\n    setProjectSettings(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleSaveProject = async () => {\n    try {\n      setSaving(true);\n\n      if (!currentProject?.id) {\n        alert('No project selected to save');\n        return;\n      }\n\n      console.log('Saving project settings:', projectSettings);\n\n      // Prepare update data\n      const updateData = {\n        name: projectSettings.name,\n        description: projectSettings.description,\n        status: projectSettings.status,\n        priority: projectSettings.priority,\n        start_date: projectSettings.startDate || null,\n        due_date: projectSettings.endDate || null,\n        // Add other fields as needed\n      };\n\n      // Update project via API\n      const result = await apiService.projects.update(currentProject.id, updateData);\n\n      if (result) {\n        console.log('✅ Project updated successfully');\n        alert('Project settings saved successfully!');\n        setCurrentProject(result);\n      } else {\n        throw new Error('Failed to update project');\n      }\n\n    } catch (error) {\n      console.error('Failed to save project:', error);\n      alert(`Failed to save project: ${error.message}`);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleNotificationChange = (field, checked) => {\n    setNotifications(prev => ({\n      ...prev,\n      [field]: checked\n    }));\n  };\n\n  const handleWorkflowChange = (field, checked) => {\n    setWorkflowSettings(prev => ({\n      ...prev,\n      [field]: checked\n    }));\n  };\n\n  const handleArchiveProject = async () => {\n    if (!window.confirm('Are you sure you want to archive this project? You can restore it later.')) {\n      return;\n    }\n\n    try {\n      // TODO: Implement actual archive API call\n      const apiService = (await import('../../../utils/apiService')).default;\n      await apiService.projects.update(currentProject.id, { status: 'archived' });\n\n      alert('Project archived successfully!');\n      // Optionally redirect to dashboard\n      window.location.href = '/role-based-dashboard';\n    } catch (error) {\n      console.error('Failed to archive project:', error);\n      alert('Failed to archive project. Please try again.');\n    }\n  };\n\n  const handleDeleteProject = async () => {\n    const projectName = currentProject?.name || 'this project';\n    const confirmMessage = `Are you sure you want to delete \"${projectName}\"? This action cannot be undone and will permanently delete all project data including tasks, files, and history.`;\n\n    if (!window.confirm(confirmMessage)) {\n      return;\n    }\n\n    // Double confirmation for delete\n    const doubleConfirm = window.prompt(`To confirm deletion, please type the project name: \"${projectName}\"`);\n    if (doubleConfirm !== projectName) {\n      alert('Project name does not match. Deletion cancelled.');\n      return;\n    }\n\n    try {\n      const apiService = (await import('../../../utils/apiService')).default;\n      await apiService.projects.delete(currentProject.id);\n\n      alert('Project deleted successfully!');\n      // Redirect to dashboard\n      window.location.href = '/role-based-dashboard';\n    } catch (error) {\n      console.error('Failed to delete project:', error);\n      alert('Failed to delete project. Please try again.');\n    }\n  };\n\n  const handleIntegrationToggle = (integrationId) => {\n    console.log(`Toggling integration: ${integrationId}`);\n  };\n\n  const handleRoleChange = (memberId, newRole) => {\n    console.log(`Changing role for member ${memberId} to ${newRole}`);\n  };\n\n  const handleRemoveMember = (memberId) => {\n    console.log(`Removing member: ${memberId}`);\n  };\n\n  const formatLastActive = (timestamp) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = (now - date) / (1000 * 60 * 60);\n    \n    if (diffInHours < 1) {\n      return 'Active now';\n    } else if (diffInHours < 24) {\n      return `${Math.floor(diffInHours)}h ago`;\n    } else {\n      return date.toLocaleDateString();\n    }\n  };\n\n  const getRoleBadgeColor = (role) => {\n    switch (role) {\n      case 'owner':\n        return 'text-error bg-error/10';\n      case 'admin':\n        return 'text-warning bg-warning/10';\n      case 'member':\n        return 'text-primary bg-primary/10';\n      case 'viewer':\n        return 'text-text-secondary bg-muted';\n      default:\n        return 'text-text-secondary bg-muted';\n    }\n  };\n\n  // Show loading state\n  if (loading) {\n    return (\n      <div className=\"space-y-8\">\n        <div className=\"bg-card rounded-lg border border-border p-6\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-6 bg-muted rounded w-1/3 mb-4\"></div>\n            <div className=\"space-y-3\">\n              <div className=\"h-4 bg-muted rounded w-full\"></div>\n              <div className=\"h-4 bg-muted rounded w-2/3\"></div>\n              <div className=\"h-4 bg-muted rounded w-1/2\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Project Information */}\n      <div className=\"bg-card rounded-lg border border-border p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h3 className=\"text-lg font-medium text-foreground\">Project Information</h3>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            iconName=\"Save\"\n            iconPosition=\"left\"\n            onClick={handleSaveProject}\n            disabled={saving}\n          >\n            {saving ? 'Saving...' : 'Save Changes'}\n          </Button>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <Input\n            label=\"Project Name\"\n            type=\"text\"\n            value={projectSettings.name}\n            onChange={(e) => handleProjectSettingChange('name', e.target.value)}\n            required\n          />\n          <Select\n            label=\"Project Status\"\n            options={statusOptions}\n            value={projectSettings.status}\n            onChange={(value) => handleProjectSettingChange('status', value)}\n          />\n          <div className=\"md:col-span-2\">\n            <Input\n              label=\"Description\"\n              type=\"text\"\n              value={projectSettings.description}\n              onChange={(e) => handleProjectSettingChange('description', e.target.value)}\n              description=\"Brief description of the project goals and objectives\"\n            />\n          </div>\n          <Select\n            label=\"Visibility\"\n            options={visibilityOptions}\n            value={projectSettings.visibility}\n            onChange={(value) => handleProjectSettingChange('visibility', value)}\n          />\n          <Select\n            label=\"Priority\"\n            options={priorityOptions}\n            value={projectSettings.priority}\n            onChange={(value) => handleProjectSettingChange('priority', value)}\n          />\n          <Input\n            label=\"Start Date\"\n            type=\"date\"\n            value={projectSettings.startDate}\n            onChange={(e) => handleProjectSettingChange('startDate', e.target.value)}\n          />\n          <Input\n            label=\"End Date\"\n            type=\"date\"\n            value={projectSettings.endDate}\n            onChange={(e) => handleProjectSettingChange('endDate', e.target.value)}\n          />\n          <Input\n            label=\"Budget\"\n            type=\"number\"\n            value={projectSettings.budget}\n            onChange={(e) => handleProjectSettingChange('budget', e.target.value)}\n          />\n          <Select\n            label=\"Currency\"\n            options={currencyOptions}\n            value={projectSettings.currency}\n            onChange={(value) => handleProjectSettingChange('currency', value)}\n          />\n          <div className=\"md:col-span-2\">\n            <Select\n              label=\"Timezone\"\n              options={timezoneOptions}\n              value={projectSettings.timezone}\n              onChange={(value) => handleProjectSettingChange('timezone', value)}\n              searchable\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Team Members */}\n      <div className=\"bg-card rounded-lg border border-border p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h3 className=\"text-lg font-medium text-foreground\">Team Members</h3>\n          <Button variant=\"default\" size=\"sm\" iconName=\"UserPlus\" iconPosition=\"left\">\n            Invite Member\n          </Button>\n        </div>\n        <div className=\"space-y-4\">\n          {teamMembers.map((member) => (\n            <div key={member.id} className=\"flex items-center justify-between p-4 rounded-lg border border-border hover:bg-muted/50 transition-colors\">\n              <div className=\"flex items-center gap-4\">\n                <img\n                  src={member.avatar}\n                  alt={member.name}\n                  className=\"w-12 h-12 rounded-full object-cover\"\n                />\n                <div>\n                  <h4 className=\"font-medium text-foreground\">{member.name}</h4>\n                  <p className=\"text-sm text-text-secondary\">{member.email}</p>\n                  <div className=\"flex items-center gap-2 mt-1\">\n                    <span className=\"text-xs text-text-secondary\">\n                      Joined {new Date(member.joinedDate).toLocaleDateString()}\n                    </span>\n                    <span className=\"text-xs text-text-secondary\">•</span>\n                    <span className=\"text-xs text-text-secondary\">\n                      {formatLastActive(member.lastActive)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${getRoleBadgeColor(member.role)}`}>\n                  {member.role}\n                </span>\n                <Select\n                  options={roleOptions}\n                  value={member.role}\n                  onChange={(value) => handleRoleChange(member.id, value)}\n                  className=\"w-40\"\n                />\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  iconName=\"Trash2\"\n                  onClick={() => handleRemoveMember(member.id)}\n                  disabled={member.role === 'owner'}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Notifications */}\n      <div className=\"bg-card rounded-lg border border-border p-6\">\n        <h3 className=\"text-lg font-medium text-foreground mb-6\">Notification Settings</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-4\">\n            <h4 className=\"font-medium text-foreground\">Email Notifications</h4>\n            <Checkbox\n              label=\"Task assignments and updates\"\n              checked={notifications.taskAssignments}\n              onChange={(e) => handleNotificationChange('taskAssignments', e.target.checked)}\n            />\n            <Checkbox\n              label=\"Deadline reminders\"\n              checked={notifications.deadlineReminders}\n              onChange={(e) => handleNotificationChange('deadlineReminders', e.target.checked)}\n            />\n            <Checkbox\n              label=\"Status changes\"\n              checked={notifications.statusChanges}\n              onChange={(e) => handleNotificationChange('statusChanges', e.target.checked)}\n            />\n            <Checkbox\n              label=\"Weekly progress reports\"\n              checked={notifications.weeklyReports}\n              onChange={(e) => handleNotificationChange('weeklyReports', e.target.checked)}\n            />\n          </div>\n          <div className=\"space-y-4\">\n            <h4 className=\"font-medium text-foreground\">Integration Notifications</h4>\n            <Checkbox\n              label=\"Slack notifications\"\n              checked={notifications.slackIntegration}\n              onChange={(e) => handleNotificationChange('slackIntegration', e.target.checked)}\n            />\n            <Checkbox\n              label=\"Microsoft Teams notifications\"\n              checked={notifications.teamsIntegration}\n              onChange={(e) => handleNotificationChange('teamsIntegration', e.target.checked)}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Workflow Settings */}\n      <div className=\"bg-card rounded-lg border border-border p-6\">\n        <h3 className=\"text-lg font-medium text-foreground mb-6\">Workflow Settings</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-4\">\n            <Checkbox\n              label=\"Auto-assign tasks to available members\"\n              description=\"Automatically distribute new tasks based on workload\"\n              checked={workflowSettings.autoAssignTasks}\n              onChange={(e) => handleWorkflowChange('autoAssignTasks', e.target.checked)}\n            />\n            <Checkbox\n              label=\"Require approval for task completion\"\n              description=\"Tasks need admin approval before marking as done\"\n              checked={workflowSettings.requireApproval}\n              onChange={(e) => handleWorkflowChange('requireApproval', e.target.checked)}\n            />\n            <Checkbox\n              label=\"Enable time tracking\"\n              description=\"Allow team members to log time spent on tasks\"\n              checked={workflowSettings.enableTimeTracking}\n              onChange={(e) => handleWorkflowChange('enableTimeTracking', e.target.checked)}\n            />\n          </div>\n          <div className=\"space-y-4\">\n            <Checkbox\n              label=\"Allow guest access\"\n              description=\"External users can view project with limited permissions\"\n              checked={workflowSettings.allowGuestAccess}\n              onChange={(e) => handleWorkflowChange('allowGuestAccess', e.target.checked)}\n            />\n            <Checkbox\n              label=\"Mandatory comments on status changes\"\n              description=\"Require explanation when changing task status\"\n              checked={workflowSettings.mandatoryComments}\n              onChange={(e) => handleWorkflowChange('mandatoryComments', e.target.checked)}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Integrations */}\n      <div className=\"bg-card rounded-lg border border-border p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h3 className=\"text-lg font-medium text-foreground\">Integrations</h3>\n          <Button variant=\"outline\" size=\"sm\" iconName=\"Plus\" iconPosition=\"left\">\n            Add Integration\n          </Button>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {integrations.map((integration) => (\n            <div key={integration.id} className=\"flex items-center justify-between p-4 rounded-lg border border-border\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-10 h-10 bg-muted rounded-lg flex items-center justify-center\">\n                  <Icon name={integration.icon} size={20} className=\"text-primary\" />\n                </div>\n                <div>\n                  <h4 className=\"font-medium text-foreground\">{integration.name}</h4>\n                  <p className=\"text-sm text-text-secondary\">{integration.description}</p>\n                  {integration.connected && integration.lastSync && (\n                    <p className=\"text-xs text-success\">\n                      Last sync: {new Date(integration.lastSync).toLocaleString()}\n                    </p>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                  integration.connected ? 'text-success bg-success/10' : 'text-text-secondary bg-muted'\n                }`}>\n                  {integration.connected ? 'Connected' : 'Not Connected'}\n                </span>\n                <Button\n                  variant={integration.connected ? \"destructive\" : \"default\"}\n                  size=\"sm\"\n                  onClick={() => handleIntegrationToggle(integration.id)}\n                >\n                  {integration.connected ? 'Disconnect' : 'Connect'}\n                </Button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Danger Zone */}\n      <div className=\"bg-card rounded-lg border border-error/20 p-6\">\n        <h3 className=\"text-lg font-medium text-error mb-4\">Danger Zone</h3>\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between p-4 rounded-lg border border-error/20 bg-error/5\">\n            <div>\n              <h4 className=\"font-medium text-foreground\">Archive Project</h4>\n              <p className=\"text-sm text-text-secondary\">\n                Archive this project to hide it from active projects. You can restore it later.\n              </p>\n            </div>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={handleArchiveProject}\n            >\n              Archive\n            </Button>\n          </div>\n          <div className=\"flex items-center justify-between p-4 rounded-lg border border-error/20 bg-error/5\">\n            <div>\n              <h4 className=\"font-medium text-foreground\">Delete Project</h4>\n              <p className=\"text-sm text-text-secondary\">\n                Permanently delete this project and all its data. This action cannot be undone.\n              </p>\n            </div>\n            <Button\n              variant=\"destructive\"\n              size=\"sm\"\n              onClick={handleDeleteProject}\n            >\n              Delete Project\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsTab;"],"names":["SettingsTab","location","useLocation","loading","setLoading","useState","currentProject","setCurrentProject","projectSettings","setProjectSettings","name","description","visibility","status","priority","startDate","endDate","budget","currency","timezone","notifications","setNotifications","emailUpdates","taskAssignments","deadlineReminders","statusChanges","weeklyReports","slackIntegration","teamsIntegration","useEffect","async","_location$state","_location$state2","_location$state2$proj","projectId","state","project","id","console","log","projectData","apiService","projects","getById","_projectData$budget","start_date","split","due_date","toString","error","loadProjectData","workflowSettings","setWorkflowSettings","autoAssignTasks","requireApproval","allowGuestAccess","enableTimeTracking","mandatoryComments","saving","setSaving","roleOptions","value","label","handleProjectSettingChange","field","prev","handleNotificationChange","checked","handleWorkflowChange","formatLastActive","timestamp","date","Date","diffInHours","Math","floor","toLocaleDateString","getRoleBadgeColor","role","_jsx","className","children","_jsxs","Button","variant","size","iconName","iconPosition","onClick","alert","updateData","result","update","Error","message","disabled","Input","type","onChange","e","target","required","Select","options","searchable","email","avatar","joinedDate","lastActive","map","member","src","alt","handleRoleChange","memberId","newRole","handleRemoveMember","Checkbox","icon","connected","lastSync","integration","Icon","toLocaleString","handleIntegrationToggle","integrationId","window","confirm","default","href","projectName","confirmMessage","prompt","delete"],"sourceRoot":""}