{"version":3,"file":"static/js/504.659c60bc.chunk.js","mappings":"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","sources":["pages/project-management/components/SettingsTab.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Icon from '../../../components/AppIcon';\r\nimport Button from '../../../components/ui/Button';\r\nimport Input from '../../../components/ui/Input';\r\nimport Select from '../../../components/ui/Select';\r\nimport { Checkbox } from '../../../components/ui/Checkbox';\r\nimport apiService from '../../../utils/apiService';\r\n\r\nconst SettingsTab = () => {\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentProject, setCurrentProject] = useState(null);\r\n  const [projectSettings, setProjectSettings] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    visibility: \"private\",\r\n    status: \"active\",\r\n    priority: \"medium\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    budget: \"\",\r\n    currency: \"USD\",\r\n    timezone: \"America/New_York\"\r\n  });\r\n\r\n  const [notifications, setNotifications] = useState({\r\n    emailUpdates: true,\r\n    taskAssignments: true,\r\n    deadlineReminders: true,\r\n    statusChanges: false,\r\n    weeklyReports: true,\r\n    slackIntegration: false,\r\n    teamsIntegration: true\r\n  });\r\n\r\n  // Load current project data\r\n  useEffect(() => {\r\n    const loadProjectData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Get project ID from location state or URL\r\n        const projectId = location.state?.projectId || location.state?.project?.id;\r\n\r\n        if (!projectId) {\r\n          console.log('No project ID found, using default values');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        console.log('Loading project data for:', projectId);\r\n\r\n        // Fetch project data from API\r\n        const projectData = await apiService.projects.getById(projectId);\r\n\r\n        if (projectData) {\r\n          setCurrentProject(projectData);\r\n\r\n          // Update form with actual project data\r\n          setProjectSettings({\r\n            name: projectData.name || \"\",\r\n            description: projectData.description || \"\",\r\n            visibility: projectData.visibility || \"private\",\r\n            status: projectData.status || \"active\",\r\n            priority: projectData.priority || \"medium\",\r\n            startDate: projectData.start_date ? projectData.start_date.split('T')[0] : \"\",\r\n            endDate: projectData.due_date ? projectData.due_date.split('T')[0] : \"\",\r\n            budget: projectData.budget?.toString() || \"\",\r\n            currency: projectData.currency || \"USD\",\r\n            timezone: projectData.timezone || \"America/New_York\"\r\n          });\r\n\r\n          console.log('✅ Project data loaded:', projectData);\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Failed to load project data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadProjectData();\r\n  }, [location.state]);\r\n\r\n  const [workflowSettings, setWorkflowSettings] = useState({\r\n    autoAssignTasks: false,\r\n    requireApproval: true,\r\n    allowGuestAccess: false,\r\n    enableTimeTracking: true,\r\n    mandatoryComments: false\r\n  });\r\n\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  const visibilityOptions = [\r\n    { value: 'private', label: 'Private - Only team members' },\r\n    { value: 'organization', label: 'Organization - All org members' },\r\n    { value: 'public', label: 'Public - Anyone with link' }\r\n  ];\r\n\r\n  const statusOptions = [\r\n    { value: 'active', label: 'Active' },\r\n    { value: 'on-hold', label: 'On Hold' },\r\n    { value: 'completed', label: 'Completed' },\r\n    { value: 'archived', label: 'Archived' }\r\n  ];\r\n\r\n  const priorityOptions = [\r\n    { value: 'low', label: 'Low Priority' },\r\n    { value: 'medium', label: 'Medium Priority' },\r\n    { value: 'high', label: 'High Priority' },\r\n    { value: 'critical', label: 'Critical Priority' }\r\n  ];\r\n\r\n  const currencyOptions = [\r\n    { value: 'USD', label: 'US Dollar (USD)' },\r\n    { value: 'EUR', label: 'Euro (EUR)' },\r\n    { value: 'GBP', label: 'British Pound (GBP)' },\r\n    { value: 'JPY', label: 'Japanese Yen (JPY)' }\r\n  ];\r\n\r\n  const timezoneOptions = [\r\n    { value: 'America/New_York', label: 'Eastern Time (ET)' },\r\n    { value: 'America/Chicago', label: 'Central Time (CT)' },\r\n    { value: 'America/Denver', label: 'Mountain Time (MT)' },\r\n    { value: 'America/Los_Angeles', label: 'Pacific Time (PT)' },\r\n    { value: 'Europe/London', label: 'Greenwich Mean Time (GMT)' },\r\n    { value: 'Europe/Paris', label: 'Central European Time (CET)' },\r\n    { value: 'Asia/Tokyo', label: 'Japan Standard Time (JST)' }\r\n  ];\r\n\r\n  const integrations = [\r\n    {\r\n      id: 'slack',\r\n      name: 'Slack',\r\n      description: 'Send notifications and updates to Slack channels',\r\n      icon: 'MessageSquare',\r\n      connected: true,\r\n      lastSync: '2025-07-28T06:30:00Z'\r\n    },\r\n    {\r\n      id: 'teams',\r\n      name: 'Microsoft Teams',\r\n      description: 'Collaborate and share updates in Teams channels',\r\n      icon: 'Users',\r\n      connected: false,\r\n      lastSync: null\r\n    },\r\n    {\r\n      id: 'jira',\r\n      name: 'Jira',\r\n      description: 'Sync issues and track development progress',\r\n      icon: 'Bug',\r\n      connected: true,\r\n      lastSync: '2025-07-28T05:45:00Z'\r\n    },\r\n    {\r\n      id: 'calendar',\r\n      name: 'Google Calendar',\r\n      description: 'Sync project deadlines and meetings',\r\n      icon: 'Calendar',\r\n      connected: false,\r\n      lastSync: null\r\n    },\r\n    {\r\n      id: 'github',\r\n      name: 'GitHub',\r\n      description: 'Link commits and pull requests to tasks',\r\n      icon: 'GitBranch',\r\n      connected: true,\r\n      lastSync: '2025-07-28T07:00:00Z'\r\n    }\r\n  ];\r\n\r\n  const teamMembers = [\r\n    {\r\n      id: 1,\r\n      name: \"Sarah Johnson\",\r\n      email: \"sarah.johnson@company.com\",\r\n      role: \"owner\",\r\n      avatar: \"https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face\",\r\n      joinedDate: \"2025-01-15\",\r\n      lastActive: \"2025-07-28T06:45:00Z\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Michael Chen\",\r\n      email: \"michael.chen@company.com\",\r\n      role: \"admin\",\r\n      avatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face\",\r\n      joinedDate: \"2025-01-20\",\r\n      lastActive: \"2025-07-28T07:00:00Z\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Emily Rodriguez\",\r\n      email: \"emily.rodriguez@company.com\",\r\n      role: \"member\",\r\n      avatar: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face\",\r\n      joinedDate: \"2025-02-01\",\r\n      lastActive: \"2025-07-28T06:30:00Z\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"David Kim\",\r\n      email: \"david.kim@company.com\",\r\n      role: \"member\",\r\n      avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face\",\r\n      joinedDate: \"2025-02-10\",\r\n      lastActive: \"2025-07-27T18:20:00Z\"\r\n    }\r\n  ];\r\n\r\n  const roleOptions = [\r\n    { value: 'viewer', label: 'Viewer - Can view project' },\r\n    { value: 'member', label: 'Member - Can edit tasks' },\r\n    { value: 'admin', label: 'Admin - Can manage project' },\r\n    { value: 'owner', label: 'Owner - Full control' }\r\n  ];\r\n\r\n  const handleProjectSettingChange = (field, value) => {\r\n    setProjectSettings(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleSaveProject = async () => {\r\n    try {\r\n      setSaving(true);\r\n\r\n      if (!currentProject?.id) {\r\n        alert('No project selected to save');\r\n        return;\r\n      }\r\n\r\n      console.log('Saving project settings:', projectSettings);\r\n\r\n      // Prepare update data\r\n      const updateData = {\r\n        name: projectSettings.name,\r\n        description: projectSettings.description,\r\n        status: projectSettings.status,\r\n        priority: projectSettings.priority,\r\n        start_date: projectSettings.startDate || null,\r\n        due_date: projectSettings.endDate || null,\r\n        // Add other fields as needed\r\n      };\r\n\r\n      // Update project via API\r\n      const result = await apiService.projects.update(currentProject.id, updateData);\r\n\r\n      if (result) {\r\n        console.log('✅ Project updated successfully');\r\n        alert('Project settings saved successfully!');\r\n        setCurrentProject(result);\r\n      } else {\r\n        throw new Error('Failed to update project');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Failed to save project:', error);\r\n      alert(`Failed to save project: ${error.message}`);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleNotificationChange = (field, checked) => {\r\n    setNotifications(prev => ({\r\n      ...prev,\r\n      [field]: checked\r\n    }));\r\n  };\r\n\r\n  const handleWorkflowChange = (field, checked) => {\r\n    setWorkflowSettings(prev => ({\r\n      ...prev,\r\n      [field]: checked\r\n    }));\r\n  };\r\n\r\n  const handleArchiveProject = async () => {\r\n    if (!window.confirm('Are you sure you want to archive this project? You can restore it later.')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // TODO: Implement actual archive API call\r\n      const apiService = (await import('../../../utils/apiService')).default;\r\n      await apiService.projects.update(currentProject.id, { status: 'archived' });\r\n\r\n      alert('Project archived successfully!');\r\n      // Optionally redirect to dashboard\r\n      window.location.href = '/role-based-dashboard';\r\n    } catch (error) {\r\n      console.error('Failed to archive project:', error);\r\n      alert('Failed to archive project. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteProject = async () => {\r\n    const projectName = currentProject?.name || 'this project';\r\n    const confirmMessage = `Are you sure you want to delete \"${projectName}\"? This action cannot be undone and will permanently delete all project data including tasks, files, and history.`;\r\n\r\n    if (!window.confirm(confirmMessage)) {\r\n      return;\r\n    }\r\n\r\n    // Double confirmation for delete\r\n    const doubleConfirm = window.prompt(`To confirm deletion, please type the project name: \"${projectName}\"`);\r\n    if (doubleConfirm !== projectName) {\r\n      alert('Project name does not match. Deletion cancelled.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const apiService = (await import('../../../utils/apiService')).default;\r\n      await apiService.projects.delete(currentProject.id);\r\n\r\n      alert('Project deleted successfully!');\r\n      // Redirect to dashboard\r\n      window.location.href = '/role-based-dashboard';\r\n    } catch (error) {\r\n      console.error('Failed to delete project:', error);\r\n      alert('Failed to delete project. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleIntegrationToggle = (integrationId) => {\r\n    console.log(`Toggling integration: ${integrationId}`);\r\n  };\r\n\r\n  const handleRoleChange = (memberId, newRole) => {\r\n    console.log(`Changing role for member ${memberId} to ${newRole}`);\r\n  };\r\n\r\n  const handleRemoveMember = (memberId) => {\r\n    console.log(`Removing member: ${memberId}`);\r\n  };\r\n\r\n  const formatLastActive = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const now = new Date();\r\n    const diffInHours = (now - date) / (1000 * 60 * 60);\r\n    \r\n    if (diffInHours < 1) {\r\n      return 'Active now';\r\n    } else if (diffInHours < 24) {\r\n      return `${Math.floor(diffInHours)}h ago`;\r\n    } else {\r\n      return date.toLocaleDateString();\r\n    }\r\n  };\r\n\r\n  const getRoleBadgeColor = (role) => {\r\n    switch (role) {\r\n      case 'owner':\r\n        return 'text-error bg-error/10';\r\n      case 'admin':\r\n        return 'text-warning bg-warning/10';\r\n      case 'member':\r\n        return 'text-primary bg-primary/10';\r\n      case 'viewer':\r\n        return 'text-text-secondary bg-muted';\r\n      default:\r\n        return 'text-text-secondary bg-muted';\r\n    }\r\n  };\r\n\r\n  // Show loading state\r\n  if (loading) {\r\n    return (\r\n      <div className=\"space-y-8\">\r\n        <div className=\"bg-card rounded-lg border border-border p-6\">\r\n          <div className=\"flex flex-col items-center justify-center space-y-4 py-8\">\r\n            <Icon name='Loader2' size={32} className='animate-spin text-primary' />\r\n            <div className=\"text-lg text-muted-foreground\">\r\n              Loading project settings...\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Project Information */}\r\n      <div className=\"bg-card rounded-lg border border-border p-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h3 className=\"text-lg font-medium text-foreground\">Project Information</h3>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            iconName=\"Save\"\r\n            iconPosition=\"left\"\r\n            onClick={handleSaveProject}\r\n            disabled={saving}\r\n          >\r\n            {saving ? 'Saving...' : 'Save Changes'}\r\n          </Button>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <Input\r\n            label=\"Project Name\"\r\n            type=\"text\"\r\n            value={projectSettings.name}\r\n            onChange={(e) => handleProjectSettingChange('name', e.target.value)}\r\n            required\r\n          />\r\n          <Select\r\n            label=\"Project Status\"\r\n            options={statusOptions}\r\n            value={projectSettings.status}\r\n            onChange={(value) => handleProjectSettingChange('status', value)}\r\n          />\r\n          <div className=\"md:col-span-2\">\r\n            <Input\r\n              label=\"Description\"\r\n              type=\"text\"\r\n              value={projectSettings.description}\r\n              onChange={(e) => handleProjectSettingChange('description', e.target.value)}\r\n              description=\"Brief description of the project goals and objectives\"\r\n            />\r\n          </div>\r\n          <Select\r\n            label=\"Visibility\"\r\n            options={visibilityOptions}\r\n            value={projectSettings.visibility}\r\n            onChange={(value) => handleProjectSettingChange('visibility', value)}\r\n          />\r\n          <Select\r\n            label=\"Priority\"\r\n            options={priorityOptions}\r\n            value={projectSettings.priority}\r\n            onChange={(value) => handleProjectSettingChange('priority', value)}\r\n          />\r\n          <Input\r\n            label=\"Start Date\"\r\n            type=\"date\"\r\n            value={projectSettings.startDate}\r\n            onChange={(e) => handleProjectSettingChange('startDate', e.target.value)}\r\n          />\r\n          <Input\r\n            label=\"End Date\"\r\n            type=\"date\"\r\n            value={projectSettings.endDate}\r\n            onChange={(e) => handleProjectSettingChange('endDate', e.target.value)}\r\n          />\r\n          <Input\r\n            label=\"Budget\"\r\n            type=\"number\"\r\n            value={projectSettings.budget}\r\n            onChange={(e) => handleProjectSettingChange('budget', e.target.value)}\r\n          />\r\n          <Select\r\n            label=\"Currency\"\r\n            options={currencyOptions}\r\n            value={projectSettings.currency}\r\n            onChange={(value) => handleProjectSettingChange('currency', value)}\r\n          />\r\n          <div className=\"md:col-span-2\">\r\n            <Select\r\n              label=\"Timezone\"\r\n              options={timezoneOptions}\r\n              value={projectSettings.timezone}\r\n              onChange={(value) => handleProjectSettingChange('timezone', value)}\r\n              searchable\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Team Members */}\r\n      <div className=\"bg-card rounded-lg border border-border p-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h3 className=\"text-lg font-medium text-foreground\">Team Members</h3>\r\n          <Button variant=\"default\" size=\"sm\" iconName=\"UserPlus\" iconPosition=\"left\">\r\n            Invite Member\r\n          </Button>\r\n        </div>\r\n        <div className=\"space-y-4\">\r\n          {teamMembers.map((member) => (\r\n            <div key={member.id} className=\"flex items-center justify-between p-4 rounded-lg border border-border hover:bg-muted/50 transition-colors\">\r\n              <div className=\"flex items-center gap-4\">\r\n                <img\r\n                  src={member.avatar}\r\n                  alt={member.name}\r\n                  className=\"w-12 h-12 rounded-full object-cover\"\r\n                />\r\n                <div>\r\n                  <h4 className=\"font-medium text-foreground\">{member.name}</h4>\r\n                  <p className=\"text-sm text-text-secondary\">{member.email}</p>\r\n                  <div className=\"flex items-center gap-2 mt-1\">\r\n                    <span className=\"text-xs text-text-secondary\">\r\n                      Joined {new Date(member.joinedDate).toLocaleDateString()}\r\n                    </span>\r\n                    <span className=\"text-xs text-text-secondary\">•</span>\r\n                    <span className=\"text-xs text-text-secondary\">\r\n                      {formatLastActive(member.lastActive)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center gap-3\">\r\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${getRoleBadgeColor(member.role)}`}>\r\n                  {member.role}\r\n                </span>\r\n                <Select\r\n                  options={roleOptions}\r\n                  value={member.role}\r\n                  onChange={(value) => handleRoleChange(member.id, value)}\r\n                  className=\"w-40\"\r\n                />\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  iconName=\"Trash2\"\r\n                  onClick={() => handleRemoveMember(member.id)}\r\n                  disabled={member.role === 'owner'}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Notifications */}\r\n      <div className=\"bg-card rounded-lg border border-border p-6\">\r\n        <h3 className=\"text-lg font-medium text-foreground mb-6\">Notification Settings</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <div className=\"space-y-4\">\r\n            <h4 className=\"font-medium text-foreground\">Email Notifications</h4>\r\n            <Checkbox\r\n              label=\"Task assignments and updates\"\r\n              checked={notifications.taskAssignments}\r\n              onChange={(e) => handleNotificationChange('taskAssignments', e.target.checked)}\r\n            />\r\n            <Checkbox\r\n              label=\"Deadline reminders\"\r\n              checked={notifications.deadlineReminders}\r\n              onChange={(e) => handleNotificationChange('deadlineReminders', e.target.checked)}\r\n            />\r\n            <Checkbox\r\n              label=\"Status changes\"\r\n              checked={notifications.statusChanges}\r\n              onChange={(e) => handleNotificationChange('statusChanges', e.target.checked)}\r\n            />\r\n            <Checkbox\r\n              label=\"Weekly progress reports\"\r\n              checked={notifications.weeklyReports}\r\n              onChange={(e) => handleNotificationChange('weeklyReports', e.target.checked)}\r\n            />\r\n          </div>\r\n          <div className=\"space-y-4\">\r\n            <h4 className=\"font-medium text-foreground\">Integration Notifications</h4>\r\n            <Checkbox\r\n              label=\"Slack notifications\"\r\n              checked={notifications.slackIntegration}\r\n              onChange={(e) => handleNotificationChange('slackIntegration', e.target.checked)}\r\n            />\r\n            <Checkbox\r\n              label=\"Microsoft Teams notifications\"\r\n              checked={notifications.teamsIntegration}\r\n              onChange={(e) => handleNotificationChange('teamsIntegration', e.target.checked)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Workflow Settings */}\r\n      <div className=\"bg-card rounded-lg border border-border p-6\">\r\n        <h3 className=\"text-lg font-medium text-foreground mb-6\">Workflow Settings</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <div className=\"space-y-4\">\r\n            <Checkbox\r\n              label=\"Auto-assign tasks to available members\"\r\n              description=\"Automatically distribute new tasks based on workload\"\r\n              checked={workflowSettings.autoAssignTasks}\r\n              onChange={(e) => handleWorkflowChange('autoAssignTasks', e.target.checked)}\r\n            />\r\n            <Checkbox\r\n              label=\"Require approval for task completion\"\r\n              description=\"Tasks need admin approval before marking as done\"\r\n              checked={workflowSettings.requireApproval}\r\n              onChange={(e) => handleWorkflowChange('requireApproval', e.target.checked)}\r\n            />\r\n            <Checkbox\r\n              label=\"Enable time tracking\"\r\n              description=\"Allow team members to log time spent on tasks\"\r\n              checked={workflowSettings.enableTimeTracking}\r\n              onChange={(e) => handleWorkflowChange('enableTimeTracking', e.target.checked)}\r\n            />\r\n          </div>\r\n          <div className=\"space-y-4\">\r\n            <Checkbox\r\n              label=\"Allow guest access\"\r\n              description=\"External users can view project with limited permissions\"\r\n              checked={workflowSettings.allowGuestAccess}\r\n              onChange={(e) => handleWorkflowChange('allowGuestAccess', e.target.checked)}\r\n            />\r\n            <Checkbox\r\n              label=\"Mandatory comments on status changes\"\r\n              description=\"Require explanation when changing task status\"\r\n              checked={workflowSettings.mandatoryComments}\r\n              onChange={(e) => handleWorkflowChange('mandatoryComments', e.target.checked)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Integrations */}\r\n      <div className=\"bg-card rounded-lg border border-border p-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h3 className=\"text-lg font-medium text-foreground\">Integrations</h3>\r\n          <Button variant=\"outline\" size=\"sm\" iconName=\"Plus\" iconPosition=\"left\">\r\n            Add Integration\r\n          </Button>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          {integrations.map((integration) => (\r\n            <div key={integration.id} className=\"flex items-center justify-between p-4 rounded-lg border border-border\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"w-10 h-10 bg-muted rounded-lg flex items-center justify-center\">\r\n                  <Icon name={integration.icon} size={20} className=\"text-primary\" />\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-medium text-foreground\">{integration.name}</h4>\r\n                  <p className=\"text-sm text-text-secondary\">{integration.description}</p>\r\n                  {integration.connected && integration.lastSync && (\r\n                    <p className=\"text-xs text-success\">\r\n                      Last sync: {new Date(integration.lastSync).toLocaleString()}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                  integration.connected ? 'text-success bg-success/10' : 'text-text-secondary bg-muted'\r\n                }`}>\r\n                  {integration.connected ? 'Connected' : 'Not Connected'}\r\n                </span>\r\n                <Button\r\n                  variant={integration.connected ? \"destructive\" : \"default\"}\r\n                  size=\"sm\"\r\n                  onClick={() => handleIntegrationToggle(integration.id)}\r\n                >\r\n                  {integration.connected ? 'Disconnect' : 'Connect'}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Danger Zone */}\r\n      <div className=\"bg-card rounded-lg border border-error/20 p-6\">\r\n        <h3 className=\"text-lg font-medium text-error mb-4\">Danger Zone</h3>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between p-4 rounded-lg border border-error/20 bg-error/5\">\r\n            <div>\r\n              <h4 className=\"font-medium text-foreground\">Archive Project</h4>\r\n              <p className=\"text-sm text-text-secondary\">\r\n                Archive this project to hide it from active projects. You can restore it later.\r\n              </p>\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={handleArchiveProject}\r\n            >\r\n              Archive\r\n            </Button>\r\n          </div>\r\n          <div className=\"flex items-center justify-between p-4 rounded-lg border border-error/20 bg-error/5\">\r\n            <div>\r\n              <h4 className=\"font-medium text-foreground\">Delete Project</h4>\r\n              <p className=\"text-sm text-text-secondary\">\r\n                Permanently delete this project and all its data. This action cannot be undone.\r\n              </p>\r\n            </div>\r\n            <Button\r\n              variant=\"destructive\"\r\n              size=\"sm\"\r\n              onClick={handleDeleteProject}\r\n            >\r\n              Delete Project\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsTab;"],"names":["SettingsTab","location","useLocation","loading","setLoading","useState","currentProject","setCurrentProject","projectSettings","setProjectSettings","name","description","visibility","status","priority","startDate","endDate","budget","currency","timezone","notifications","setNotifications","emailUpdates","taskAssignments","deadlineReminders","statusChanges","weeklyReports","slackIntegration","teamsIntegration","useEffect","async","_location$state","_location$state2","_location$state2$proj","projectId","state","project","id","console","log","projectData","apiService","projects","getById","_projectData$budget","start_date","split","due_date","toString","error","loadProjectData","workflowSettings","setWorkflowSettings","autoAssignTasks","requireApproval","allowGuestAccess","enableTimeTracking","mandatoryComments","saving","setSaving","roleOptions","value","label","handleProjectSettingChange","field","prev","handleNotificationChange","checked","handleWorkflowChange","formatLastActive","timestamp","date","Date","diffInHours","Math","floor","toLocaleDateString","getRoleBadgeColor","role","_jsx","className","children","_jsxs","Icon","size","Button","variant","iconName","iconPosition","onClick","alert","updateData","result","update","Error","message","disabled","Input","type","onChange","e","target","required","Select","options","searchable","email","avatar","joinedDate","lastActive","map","member","src","alt","handleRoleChange","memberId","newRole","handleRemoveMember","Checkbox","icon","connected","lastSync","integration","toLocaleString","handleIntegrationToggle","integrationId","window","confirm","default","href","projectName","confirmMessage","prompt","delete"],"sourceRoot":""}